/*ООП - абстракция - модели - параметры (свойства,методов)

user - сущность

Свойства:
user(username,password,email)

Метод:
user(login(),logout(),...)

-----------------------------------------------------------

ООП - наследование

user- курсы
user.getCourses
user.rate
user.role - админ,студент,модератор

Общее у всех пользователей:
user(login(),logout(),username,password,email)

*/

let user = {
    username: '',
    password: '',
    email: '',
    role: ''
    //методы

    /*
    // getCourses(
        if(admin)...
        if(user)...
        if(guest)...
    )
    */

};


// -------------------------------------------------------------------------------------------------------------------

//Наследование - расширение
// admin это расширение user
/*
admin(user){
    // changeUserStatus()
    // changeUserCourses()
    //перезаписать метод getCourses(){получить все курсы}
}
student(user){
    //rate
    //getCourses()
     //перезаписать метод getCourses(){получить курсы конктертного студента}
}
*/
//наследование позволяет расширить и повторно использовать код


// -------------------------------------------------------------------------------------------------------------------

/*
https://youtu.be/ZmH262CgLsM?t=2401

Полиморфизм
*/

// Один и тот же метод меняется в зависимости от сущности
// например метод getCourses для admin,student,guest будет предоставлять доступ к разным материалам


// -------------------------------------------------------------------------------------------------------------------

/*
https://youtu.be/ZmH262CgLsM?t=2998


Инкапсуляция

*/
/*
course{
    title: '',
    url: '',
    price: 20.00, //private,protected ...
    getPrice: { return price;}
}
*/

course.price    //!!!!
// course.getPrice()!!!!! //18$





